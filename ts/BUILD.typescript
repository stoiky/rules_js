"BUILD file inserted into @npm_typescript repository"
<<<<<<< HEAD
load("@aspect_rules_js//js:nodejs_package.bzl", "nodejs_package")
load("@aspect_rules_js//js:nodejs_binary.bzl", "nodejs_binary")
load("@aspect_bazel_lib//lib:copy_file.bzl", "copy_file")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

nodejs_package(
    name = "npm_typescript",
    src = ":package",
    package_name = "typescript",
=======
load("@aspect_rules_js//js:node_package.bzl", "node_package")
load("@aspect_rules_js//js:js_binary.bzl", "js_binary")
load("@aspect_bazel_lib//lib:copy_file.bzl", "copy_file")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

node_package(
    name = "npm_typescript",
    src = ":package",
    package = "typescript",
>>>>>>> symlinked_node_modules_structure
    visibility = ["//visibility:public"],
)

# Needed to address the entry_point within the typescript package
# since the js_binary implementation in rules_js doesn't support
# $(rootpath) expansions yet.
write_file(
    name = "write_tsc",
    out = "tsc.js",
    content = [
        "const {dirname} = require('path')",
        "const tsPath = dirname(require.resolve('typescript'))",
        "require(tsPath + '/tsc.js')",
    ],
)

js_binary(
    name = "tsc",
    data = ["npm_typescript"],
    entry_point = "tsc.js",
    visibility = ["//visibility:public"],
)

copy_file(
    name = "ts_project_options_validator_js",
    src = "@rules_nodejs//nodejs/private:ts_project_options_validator.js",
    out = "ts_project_options_validator.js",
)

<<<<<<< HEAD
nodejs_binary(
=======
js_binary(
>>>>>>> symlinked_node_modules_structure
    name = "validator",
    data = ["npm_typescript"],
    entry_point = ":ts_project_options_validator.js",
    visibility = ["//visibility:public"],
)
